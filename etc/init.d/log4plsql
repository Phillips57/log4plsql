#!/bin/sh
#
#   /etc/rc.d/init.d/log4plsql
#
#   Starts LOG4PLSQL Background Process as a daemon
#
# chkconfig: 2345 99 80
# description: #LOG4PLSQL_DESCRIPTION#
# pidfile: #LOG4PLSQL_PIDFILE#

### BEGIN INIT INFO
# Provides: #LOG4PLSQL_SERVICENAME#
# Required-Start: $local_fs $remote_fs
# Required-Stop: $local_fs $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: S 0 1 6
# Short-Description: #LOG4PLSQL_SERVICENAME#
# Description: #LOG4PLSQL_DESCRIPTION#
# Modified originally from https://gist.github.com/2228905#file_logstash.sh

### END INIT INFO

if [ -z "$ORACLE_HOME" ]; then 
    ORACLE_HOME=#ORACLE_HOME#
fi
export ORACLE_HOME
export LOG4PLSQL_HOME=#LOG4PLSQL_HOME#

# Set classpath
. $LOG4PLSQL_HOME/cmd/setVariable.sh > /dev/null

JAVA=$ORACLE_HOME/jdk/bin/java
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
DESC="#LOG4PLSQL_DESCRIPTION#"
NAME=java
DAEMON=$JAVA
JARNAME=log4plsql-qr.jar
CONFIG=#LOG4PLSQL_CONFIG#
ARGS="log4plsql.backgroundProcess.Run ${CONFIG}"
SCRIPTNAME=#LOG4PLSQL_SCRIPTNAME#
PIDFILE=#LOG4PLSQL_PIDFILE#
base=#LOG4PLSQL_SERVICENAME#
HOME=$LOG4PLSQL_HOME

# Exit if the package is not installed
if [ ! -x "$DAEMON" ]; then
{
  echo "Couldn't find $DAEMON"
  exit 99
}
fi

. /etc/init.d/functions

#
# Function that starts the daemon/service
#
do_start()
{
  cd $LOCATION && \
  ($DAEMON $ARGS &) \
  && success || failure
}

set_pidfile()
{
  pgrep -f "$DAEMON[[:space:]]*$ARGS" > $PIDFILE
}

#
# Function that stops the daemon/service
#
do_stop()
{
  pid=`cat $PIDFILE`
  if checkpid $pid 2>&1; then
      # TERM first, then KILL if not dead
      kill -TERM $pid >/dev/null 2>&1
      usleep 100000
      if checkpid $pid && sleep 1 &&
         checkpid $pid && sleep $delay &&
         checkpid $pid ; then
           kill -KILL $pid >/dev/null 2>&1
           usleep 100000
      fi
  fi
  checkpid $pid
  RC=$?
  [ "$RC" -eq 0 ] && failure $"$base shutdown" || success $"$base shutdown"
}

case "$1" in
  start)
    echo -n "Starting $DESC: "
    do_start
    touch /var/lock/subsys/$JARNAME
    set_pidfile
    ;;
  stop)
    echo -n "Stopping $DESC: "
    do_stop
    rm /var/lock/subsys/$JARNAME
    rm $PIDFILE
    ;;
  restart|reload)
    echo -n "Restarting $DESC: "
    do_stop
    do_start
    touch /var/lock/subsys/$JARNAME
    set_pidfile
    ;;
  status)
    status -p $PIDFILE $base
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
    exit 3
    ;;
esac

echo
exit 0